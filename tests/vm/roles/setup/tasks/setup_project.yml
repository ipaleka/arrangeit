---
# - name: debug project dir
#   debug: msg="{{ project_dir }}"
#   tags: project
- name: check if project directories exist
  win_file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "C:\\dev\\"
    - "C:\\dev\\venvs"
  when: inventory_hostname == 'winvm'
  tags: project

- name: check if project directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ project_dir }}"
    - "{{ project_dir }}venvs"
  when: inventory_hostname != 'winvm'
  tags: project

- name: clone project repository
  git:
    repo: "{{ project_repository }}"
    dest: "{{ project_dir }}arrangeit"
    version: master
  when: inventory_hostname != 'winvm'
  tags: project

- win_stat:
    path: "C:\\dev\\arrangeit"
  register: arrangeit_dir
  when: inventory_hostname == 'winvm'
  tags: project

- name: clone project repository (MS Windows)
  win_command: '"C:\Program Files\Git\cmd\git.exe" clone {{ project_repository }}'
  args:
    chdir: "C:\\dev\\"
    creates: "C:\\dev\\arrangeit"
  when: inventory_hostname == 'winvm' and arrangeit_dir.stat.exists == False
  tags: project

- name: pull project repository (MS Windows)
  win_command: '"C:\Program Files\Git\cmd\git.exe" pull'
  args:
    chdir: "C:\\dev\\arrangeit"
  when: inventory_hostname == 'winvm' and arrangeit_dir.stat.exists != False
  tags: project

- name: create virtual environment and install base dependencies
  pip:
    requirements: "{{ project_dir }}arrangeit/requirements/base.txt"
    virtualenv: "{{ project_dir }}venvs/arrangeit"
    virtualenv_command: /usr/bin/python3 -m venv
  when: inventory_hostname != 'winvm'
  tags: project

- name: create virtual environment (MS Windows)
  win_command: C:\Python37\python.exe -m venv arrangeit
  args:
    chdir: "C:\\dev\\venvs"
    creates: "C:\\dev\\venvs\\arrangeit"
  when: inventory_hostname == 'winvm'
  tags: project

- name: install base dependencies (for MS Windows)
  win_command: "C:\\dev\\venvs\\arrangeit\\Scripts\\activate.bat && python -m pip install -r requirements\\base.txt"
  args:
    chdir: "C:\\dev\\arrangeit"
  when: inventory_hostname == 'winvm'
  tags: project

- name: install base GNU/Linux dependencies
  pip:
    requirements: "{{ project_dir }}arrangeit/requirements/linux.txt"
    virtualenv: "{{ project_dir }}venvs/arrangeit"
    virtualenv_command: /usr/bin/python3 -m venv
  when: inventory_hostname != 'winvm'
  tags: project

- name: install base MS Windows dependencies
  win_command: "C:\\dev\\venvs\\arrangeit\\Scripts\\activate.bat && python -m pip install -r requirements\\windows.txt"
  args:
    chdir: "C:\\dev\\arrangeit"
  when: inventory_hostname == 'winvm'
  tags: project

- name: install development dependencies
  pip:
    requirements: "{{ project_dir }}arrangeit/requirements/functional_testing.txt"
    virtualenv: "{{ project_dir }}venvs/arrangeit"
    virtualenv_command: /usr/bin/python3 -m venv
  when: inventory_hostname != 'winvm'
  tags: project

- name: install development dependencies (for MS Windows)
  win_command: "C:\\dev\\venvs\\arrangeit\\Scripts\\activate.bat && python -m pip install -r requirements\\functional_testing.txt"
  args:
    chdir: "C:\\dev\\arrangeit"
  when: inventory_hostname == 'winvm'
  tags: project