Vagrant.configure(2) do |config|

  config.vm.define "xfcevm" do |xfcevm|
    xfcevm.vm.box = "generic/ubuntu1904"
    xfcevm.vm.hostname = "xfcevm"
  end

  config.vm.define "gnomevm" do |gnomevm|
    gnomevm.vm.box = "generic/fedora30"
    gnomevm.vm.hostname = "gnomevm"
  end

  config.vm.define "kdevm" do |kdevm|
    kdevm.vm.box = "archlinux/archlinux"
    kdevm.vm.hostname = "kdevm"
  end

  config.vm.define "winvm" do |winvm|
    # winvm.vm.box = "inclusivedesign/windows10-eval"  # OS build 10240
    # winvm.vm.box = "gusztavvargadr/windows-10"  #
    winvm.vm.box = "StefanScherer/windows_10"  # OS build 18362.418
    winvm.vm.hostname = "winvm"

    # config.trigger.before :machine_action_boot, type: :hook do |trigger|
    #   trigger.info = "More information with ruby magic"
    #   trigger.ruby do |env,machine|
    #     puts `VBoxManage controlvm #{machine.id} setvideomodehint 1600 900 32`
    #   end

    # end

    # ## this works
    # winvm.trigger.after :up do |trigger|
    #   trigger.info = "More information with ruby magic"
    #   trigger.ruby do |env,machine|
    #     puts `VBoxManage controlvm #{machine.id} setvideomodehint 1600 900 32`
    #   end
    # end

    # ## this doesn't work
    # winvm.trigger.after :machine_action_boot, type: :hook do |trigger|
    #   trigger.info = "after boot!"
    # end

    # vb.customize ["controlvm", :id, "setvideomodehint", "1600 900 32"]
  end

  config.vm.define "osxvm" do |osxvm|
    osxvm.vm.box = "artdev/macos-sierra"
    osxvm.vm.hostname = "osxvm"
  end

  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.memory = "3072"
    vb.cpus = 1
    vb.customize ["modifyvm", :id, "--vram", "32"]
  end

  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "v"
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "setup.yml"
  end

  config.vm.provision "ansible", run: 'always' do |ansible|
    ansible.verbose = "v"
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "tests.yml"
  end

end
