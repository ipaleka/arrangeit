Vagrant.configure(2) do |config|

  # config.vm.define "xfcevm" do |xfcevm|
  #   xfcevm.vm.box = "ubuntu/bionic64"
  #   xfcevm.vm.hostname = "xfcevm"
  #   config.vm.provider "virtualbox" do |vb|
  #     vb.name = "ubuntu-xfce4"
  #   end
  # end

  # config.vm.define "gnomevm" do |gnomevm|
  #   gnomevm.vm.box = "centos/7"
  #   gnomevm.vm.hostname = "gnomevm"
  #   config.vm.provider "virtualbox" do |vb|
  #     vb.name = "centos-gnome"
  #   end
  # end

  config.vm.define "kdevm" do |kdevm|
    kdevm.vm.box = "generic/arch"
    kdevm.vm.hostname = "kdevm"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "arch-kde"
    end
  end

  # only Arch doesn't ship with Python installed
  config.vm.provision "shell", inline: "which python || sudo pacman --noconfirm -S python"

  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.memory = "2048"
    vb.cpus = 1
    vb.customize ["modifyvm", :id, "--vram", "32"]
  end

  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "v"
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "arrangeit-setup.yml"
    ansible.inventory_path = "hosts"
  end

  config.vm.provision "ansible", run: 'always' do |ansible|
    ansible.verbose = "v"
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "arrangeit-tests.yml"
    ansible.inventory_path = "hosts"
  end

end
